/*
 * WSO2 API Manager - Admin
 * This document specifies a **RESTful API** for WSO2 **API Manager** - Admin Portal.  It is written with [swagger 2](http://swagger.io/). 
 *
 * OpenAPI spec version: 0.11.0
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api.admin;

import io.swagger.client.ApiException;
import io.swagger.client.api.admin.CustomRulesApi;
import io.swagger.client.model.admin.CustomRule;
import io.swagger.client.model.admin.CustomRuleList;
import org.junit.Test;
import org.junit.Ignore;

/**
 * API tests for CustomRulesApi
 */
@Ignore
public class CustomRulesApiTest {

    private final CustomRulesApi api = new CustomRulesApi();

    
    /**
     * Get all Custom Rules
     *
     * Get all Custom Rules 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void throttlingPoliciesCustomGetTest() throws ApiException {
        String accept = null;
        String ifNoneMatch = null;
        String ifModifiedSince = null;
        CustomRuleList response = api.throttlingPoliciesCustomGet(accept, ifNoneMatch, ifModifiedSince);

        // TODO: test validations
    }
    
    /**
     * Add a Custom Rule
     *
     * Add a Custom Rule 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void throttlingPoliciesCustomPostTest() throws ApiException {
        CustomRule body = null;
        String contentType = null;
        CustomRule response = api.throttlingPoliciesCustomPost(body, contentType);

        // TODO: test validations
    }
    
    /**
     * Delete a Custom Rule
     *
     * Delete a Custom Rule 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void throttlingPoliciesCustomRuleIdDeleteTest() throws ApiException {
        String ruleId = null;
        String ifMatch = null;
        String ifUnmodifiedSince = null;
        api.throttlingPoliciesCustomRuleIdDelete(ruleId, ifMatch, ifUnmodifiedSince);

        // TODO: test validations
    }
    
    /**
     * Retrieve a Custom Rule
     *
     * Retrieve a Custom Rule providing the policy name. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void throttlingPoliciesCustomRuleIdGetTest() throws ApiException {
        String ruleId = null;
        String ifNoneMatch = null;
        String ifModifiedSince = null;
        CustomRule response = api.throttlingPoliciesCustomRuleIdGet(ruleId, ifNoneMatch, ifModifiedSince);

        // TODO: test validations
    }
    
    /**
     * Update a Custom Rule
     *
     * Update a Custom Rule 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void throttlingPoliciesCustomRuleIdPutTest() throws ApiException {
        String ruleId = null;
        CustomRule body = null;
        String contentType = null;
        String ifMatch = null;
        String ifUnmodifiedSince = null;
        CustomRule response = api.throttlingPoliciesCustomRuleIdPut(ruleId, body, contentType, ifMatch, ifUnmodifiedSince);

        // TODO: test validations
    }
    
}
