/*
 * WSO2 API Manager - Admin
 * This document specifies a **RESTful API** for WSO2 **API Manager** - Admin Portal.  It is written with [swagger 2](http://swagger.io/). 
 *
 * OpenAPI spec version: 0.11.0
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api.admin;

import io.swagger.client.ApiException;
import io.swagger.client.api.admin.MediationIndividualApi;
import io.swagger.client.model.admin.Mediation;
import org.junit.Test;
import org.junit.Ignore;

/**
 * API tests for MediationIndividualApi
 */
@Ignore
public class MediationIndividualApiTest {

    private final MediationIndividualApi api = new MediationIndividualApi();

    
    /**
     * Delete an API
     *
     * This operation can be used to delete an existing API proving the Id of the API. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void policiesMediationMediationPolicyIdDeleteTest() throws ApiException {
        String mediationPolicyId = null;
        String ifMatch = null;
        String ifUnmodifiedSince = null;
        api.policiesMediationMediationPolicyIdDelete(mediationPolicyId, ifMatch, ifUnmodifiedSince);

        // TODO: test validations
    }
    
    /**
     * Get a global mediation squence
     *
     * This operation can be used to retrieve a particular global mediation policy. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void policiesMediationMediationPolicyIdGetTest() throws ApiException {
        String mediationPolicyId = null;
        String accept = null;
        String ifNoneMatch = null;
        String ifModifiedSince = null;
        Mediation response = api.policiesMediationMediationPolicyIdGet(mediationPolicyId, accept, ifNoneMatch, ifModifiedSince);

        // TODO: test validations
    }
    
    /**
     * Update an mediation policy
     *
     * This operation can be used to update an existing API. But the properties &#x60;name&#x60;, &#x60;version&#x60;, &#x60;context&#x60;, &#x60;provider&#x60;, &#x60;state&#x60; will not be changed by this operation. 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void policiesMediationMediationPolicyIdPutTest() throws ApiException {
        String mediationPolicyId = null;
        Mediation body = null;
        String contentType = null;
        String ifMatch = null;
        String ifUnmodifiedSince = null;
        Mediation response = api.policiesMediationMediationPolicyIdPut(mediationPolicyId, body, contentType, ifMatch, ifUnmodifiedSince);

        // TODO: test validations
    }
    
}
