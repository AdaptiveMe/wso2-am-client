/*
 * WSO2 API Manager - Publisher API
 * This specifies a **RESTful API** for WSO2 **API Manager** - Publisher.  Please see [full swagger definition](https://raw.githubusercontent.com/wso2/carbon-apimgt/v6.0.4/components/apimgt/org.wso2.carbon.apimgt.rest.api.publisher/src/main/resources/publisher-api.yaml) of the API which is written using [swagger 2.0](http://swagger.io/) specification. 
 *
 * OpenAPI spec version: 0.11.0
 * Contact: architecture@wso2.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model.publisher;

import java.util.Objects;

import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;

/**
 * Wsdl
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-07-25T13:03:34.541Z")
public class Wsdl {
  @SerializedName("name")
  private String name = null;

  @SerializedName("wsdlDefinition")
  private String wsdlDefinition = null;

  public Wsdl name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(example = "admin--calculatorAPI2.0.wsdl", required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Wsdl wsdlDefinition(String wsdlDefinition) {
    this.wsdlDefinition = wsdlDefinition;
    return this;
  }

   /**
   * Get wsdlDefinition
   * @return wsdlDefinition
  **/
  @ApiModelProperty(example = "<definitions name=\"HelloService\" targetNamespace=\"http://www.examples.com/wsdl/HelloService.wsdl\" xmlns=\"http://schemas.xmlsoap.org/wsdl/\" xmlns:soap=\"http://schemas.xmlsoap.org/wsdl/soap/\" xmlns:tns=\"http://www.examples.com/wsdl/HelloService.wsdl\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"> <message name=\"SayHelloRequest\"> <part name=\"firstName\" type=\"xsd:string\"/> </message> <message name=\"SayHelloResponse\"> <part name=\"greeting\" type=\"xsd:string\"/> </message> <portType name=\"Hello_PortType\"> <operation name=\"sayHello\"> <input message=\"tns:SayHelloRequest\"/> <output message=\"tns:SayHelloResponse\"/> </operation> </portType> <binding name=\"Hello_Binding\" type=\"tns:Hello_PortType\"> <soap:binding style=\"rpc\" transport=\"http://schemas.xmlsoap.org/soap/http\"/> <operation name=\"sayHello\"> <soap:operation soapAction=\"sayHello\"/> <input> <soap:body encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" namespace=\"urn:examples:helloservice\" use=\"encoded\"/> </input> <output> <soap:body encodingStyle=\"http://schemas.xmlsoap.org/soap/encoding/\" namespace=\"urn:examples:helloservice\" use=\"encoded\"/> </output> </operation> </binding> <service name=\"Hello_Service\"> <documentation>WSDL File for HelloService</documentation> <port binding=\"tns:Hello_Binding\" name=\"Hello_Port\"> <soap:address location=\"http://www.examples.com/SayHello/\" /> </port> </service> </definitions>", value = "")
  public String getWsdlDefinition() {
    return wsdlDefinition;
  }

  public void setWsdlDefinition(String wsdlDefinition) {
    this.wsdlDefinition = wsdlDefinition;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Wsdl wsdl = (Wsdl) o;
    return Objects.equals(this.name, wsdl.name) &&
        Objects.equals(this.wsdlDefinition, wsdl.wsdlDefinition);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, wsdlDefinition);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Wsdl {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    wsdlDefinition: ").append(toIndentedString(wsdlDefinition)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

